'use strict';

/**
 * http://www.w3.org/TR/NOTE-datetime
 *
 * YYYY = four-digit year
 *
 * MM   = two-digit month (01 = January, etc.)
 * DD   = two-digit day of month (01 through 31)
 * M    = one-digit month (1 = January, etc.)
 * D    = one-digit day of month (1 through 31)
 *
 * hh   = two digits of hour (00 through 23)
 * mm   = two digits of minute (00 through 59)
 * ss   = two digits of second (00 through 59)
 * h    = one digits of hour (0 through 23)
 * m    = one digits of minute (0 through 59)
 * s    = one digits of second (0 through 59)
 *
 * S    = one or more digits representing a decimal fraction of a second
 * O    = time zone designator (Z or +hh:mm or -hh:mm)
 */

var pad = function(value) {
    return ('0' + value).substr(-2);
};


var offset = function(date) {
    var offsetMinute = date.getTimezoneOffset();
    if (offsetMinute === 0) return 'Z';

    var prefix = offsetMinute > 0 ? '-' : '+';
    var o = Math.abs(offsetMinute);
    var hh = pad(Math.floor(o / 60));
    var mm = pad(o % 60);
    return prefix + hh + ':' + mm;
};


var dateFormatter = function(date, format) {
    var _year = date.getFullYear();
    var _month = date.getMonth() + 1;
    var _date = date.getDate();
    var _hour = date.getHours();
    var _minute = date.getMinutes();
    var _second = date.getSeconds();
    var _ms = date.getMilliseconds();
    var _offset = offset(date);

    // generate number
    var pairs = {
        YYYY: _year,
        M: _month,
        MM: pad(_month),
        D: _date,
        DD: pad(_date),
        h: _hour,
        hh: pad(_hour),
        m: _minute,
        mm: pad(_minute),
        s: _second,
        ss: pad(_second),
        S: _ms,
        O: _offset
    };

    // format date
    return format.replace(
        /YYYY|MM?|DD?|hh?|mm?|ss?|S|O/g,
        function(matched) { return pairs[matched]; }
    );
};

module.exports = dateFormatter;
